datatype ExitCode<2>
  @c_type "int16_t"
  @c_byte_size "2";

thing fragment ExitHandlerMsgs
{
  message stopsignal();
  message doexit(code : ExitCode);
}

thing ExitHandler includes ExitHandlerMsgs
@c_header "#include <stdlib.h>"
@c_header "#include <signal.h>"
@c_global "struct ExitHandler_Instance *_handler_instance;"
{
  provided port commands {
    sends stopsignal
    receives doexit
  }

  function catch_sigint()
  @c_prototype "void catch_sigint(int sig)"
  @c_instance_var_name "_handler_instance"
  do
    print " Caught SIGINT\n"
    commands!stopsignal()
  end


  statechart Handler init Waiting {
    state Waiting {
      on entry do
        '_handler_instance = _instance;'
        'signal(SIGINT, catch_sigint);'
      end

      internal event e : commands?doexit action do
        print "Exiting!\n"
        'exit('&e.code&');'
      end
    }
  }
}
