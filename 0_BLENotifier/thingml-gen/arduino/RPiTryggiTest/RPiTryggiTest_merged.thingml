thing TryggiTest includes TryggiMsgs , TimerMsgs {
	required port clock {
		sends timer_start receives timer_timeout
	}
	required port tryggi {
		sends ping_tryggy sends bluetooth_act sends tellucloud_act sends show_success sends show_error sends clear_status receives pong_tryggy
	}
	statechart TryggiTestSC init DISCONNECTED {
		state DISCONNECTED {
			on entry clock!timer_start(0, 3000)
			transition -> CONNECTED
			event clock?timer_timeout
		}
		state CONNECTED {
			on entry do
				print "Connected\n"
				clock!timer_start(0, 4000)
				tryggi!ping_tryggy()
			end
			transition -> BLUETOOTH
			event clock?timer_timeout
		}
		state BLUETOOTH {
			on entry do
				print "Bluetooth\n"
				clock!timer_start(0, 2500)
				tryggi!ping_tryggy()
				tryggi!bluetooth_act()
			end
			transition -> SUCCESS
			event clock?timer_timeout
		}
		state SUCCESS {
			on entry do
				print "Success\n"
				clock!timer_start(0, 1500)
				tryggi!ping_tryggy()
				tryggi!show_success()
			end
			transition -> TELLU
			event clock?timer_timeout
		}
		state TELLU {
			on entry do
				print "Tellu\n"
				clock!timer_start(0, 2500)
				tryggi!ping_tryggy()
				tryggi!tellucloud_act()
			end
			transition -> ERROR
			event clock?timer_timeout
		}
		state ERROR {
			on entry do
				print "Error\n"
				clock!timer_start(0, 1500)
				tryggi!show_error()
			end
			transition -> STDBY
			event clock?timer_timeout
		}
		state STDBY {
			on entry do
				print "Standby\n"
				clock!timer_start(0, 5000)
				tryggi!clear_status()
			end
			transition -> DISCONNECTED
			event clock?timer_timeout
		}
	}
}
datatype Char<1>
	@type_checker "Integer"
	@c_type "char"
	@c_byte_size "1"
object String
	@type_checker "String"
	@c_type "char *"
	@c_byte_size "2"
datatype Boolean<1>
	@type_checker "Boolean"
	@c_type "uint8_t"
	@c_byte_size "1"
datatype UInt8<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@c_byte_size "1"
datatype UInt16<2>
	@type_checker "Integer"
	@c_type "uint16_t"
	@c_byte_size "2"
	@java_type "int"
	@java_primitive "true"
datatype Int8<1>
	@type_checker "Integer"
	@c_type "int8_t"
	@c_byte_size "1"
datatype Int16<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@c_byte_size "2"
datatype UInt32<4>
	@type_checker "Integer"
	@c_type "uint32_t"
	@c_byte_size "4"
datatype Integer<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@c_byte_size "2"
datatype Long<4>
	@type_checker "Integer"
	@c_type "long"
	@c_byte_size "4"
datatype Float<4>
	@type_checker "Real"
	@c_type "float"
	@c_byte_size "4"
enumeration DigitalState
	@c_byte_size "1"
	@c_type "uint8_t"
	{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}
datatype Byte<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@c_byte_size "1"
	@java_type "byte"
	@java_primitive "true"
	@scala_type "Byte"
	@SenML_type "Double"
enumeration DigitalState
	@c_type "uint8_t"
	@c_byte_size "1"
	{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}
thing fragment TimerMsgs {
	message timer_start(id : UInt8, time : UInt32)
	@timer_start "true" message timer_cancel(id : UInt8)
	@timer_cancel "true" message timer_timeout(id : UInt8)
	@timeout "true"
	message io_clock()
	@xms_tic "10" message fps_clock()
	@xms_tic "33" message ui_clock()
	@xms_tic "231"
}
thing fragment TryggiMsgs {
	message ping_tryggy()
	@code "200" message pong_tryggy()
	@code "201"
	message bluetooth_act()
	@code "202" message tellucloud_act()
	@code "203" message show_success()
	@code "204" message show_error()
	@code "205" message clear_status()
	@code "206"
}
protocol Timer ;

protocol Serial
	@serial_baudrate "9600"
	@serial_path_to_device "/dev/ttyS0"
	@serializer "binary" ;

configuration RPiTryggiTest {
	instance test : TryggiTest
	connector test.clock over Timer
	connector test.tryggi over Serial
}
