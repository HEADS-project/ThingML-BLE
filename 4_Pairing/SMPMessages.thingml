import "Datatypes.thingml"
import "SMPDatatypes.thingml"

thing fragment SMPMsgs
{
  message SMPPairingRequest(Handle : UInt, IOCapability : SMPIOCapabilities, OOBDataPresent : Boolean, Bonding : Boolean, MITM : Boolean, SecureConnection : Boolean, Keypress : Boolean, MaximumEncryptionKeySize : Byte, InitiatorKeyDistribution : SMPKeyDistribution, ResponderKeyDistribution : SMPKeyDistribution);
  message SMPPairingResponse(Handle : UInt, IOCapability : SMPIOCapabilities, OOBDataPresent : Boolean, Bonding : Boolean, MITM : Boolean, SecureConnection : Boolean, Keypress : Boolean, MaximumEncryptionKeySize : Byte, InitiatorKeyDistribution : SMPKeyDistribution, ResponderKeyDistribution : SMPKeyDistribution);

  message SMPPairingConfirm(Handle : UInt, ConfirmValue : BLERandomNumber);

  message SMPPairingRandom(Handle : UInt, RandomValue : BLERandomNumber);

  message SMPPairingFailed(Handle : UInt, Reason : SMPPairingFailReason);

  message SMPPairingPublicKey(Handle : UInt, KeyX : SMPPublicKey, KeyY : SMPPublicKey);

  message SMPPairingDHKeyCheck(Handle : UInt, DHKeyCheck : BLERandomNumber);

  message SMPKeypressNotification(Handle : UInt, Type : SMPKeypressNotification);

  message SMPEncryptionInformation(Handle : UInt, LongTermKey : BLERandomNumber);

  message SMPMasterIdentification(Handle : UInt, EDIV : UInt, Rand : BLERandomPart);

  message SMPIdentityInformation(Handle : UInt, IdentityResolvingKey : BLERandomNumber);

  message SMPIdentityAddressInformation(Handle : UInt, AddressType : BLEAddressType, Address : BTAddress);

  message SMPSigningInformation(Handle : UInt, SignatureKey : BLERandomNumber);

  message SMPSecurityRequest(Handle : UInt, Bonding : Boolean, MITM : Boolean, SecureConnection : Boolean, Keypress : Boolean);
}
